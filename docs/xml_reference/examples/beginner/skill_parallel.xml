<?xml version="1.0" encoding="UTF-8"?>

<!-- This example application shows the usage of a skill_parallel.

2 idle_duration skills will be executed. skill_parallel only finishes
after the last skill_idle_duration is done. A third skill (skill_idle)
never fires "succeeded", but skill_parallel is not blocked by this.
-->

<pitasc>

    <models>
        <include package="pitasc_library" file="models/pitasc.xml"/>
        <include package="pitasc_library" file="models/skills.xml"/>

        <include package="pitasc_library" file="universal_robots/ur.xml"/>
    </models>

    <clone prototype="project">

        <member id="configuration">
            <clone id="configuration" prototype="default_configuration"/>
        </member>

        <member id="environment">
            <clone prototype="robot_ur5">
                <member id="robot_driver.max_velocity">2.0</member>
                <member id="robot_driver.max_acceleration">3.0</member>
            </clone>
        </member>

        <member id="applications">
            <clone id="my_application" prototype="skill_sequence">

                <!-- Use this robot for this skill and all its subskills -->
                <member id="robot" reference_id="environment.robot_ur5"/>

                <!-- Add skills -->
                <member id="skills">

                    <!-- First move to start position -->
                    <clone prototype="skill_lin">
                        <member id="tool_frame">tool</member>
                        <member id="target_frame">target1</member>
                    </clone>

                    <clone prototype="skill_parallel">
                        <member id="skill_name">my_parallel</member>
                        <member id="skills">

                            <!-- idle with different durations to show skill_parallel functionality -->
                            <clone id="short_duration" prototype="skill_idle_duration">
                                <member id="skill_name">duration</member>
                                <member id="duration">0.0</member>
                            </clone>

                            <clone id="long_duration" prototype="skill_idle_duration">
                                <member id="skill_name">duration</member>
                                <member id="duration">3.0</member>
                            </clone>

                            <!-- Skills that never succeed don't block skill_parallel -->
                            <clone id="inf_duration" prototype="skill_idle">
                            </clone>

                        </member>

                    </clone>

                    <!-- Move to different end position to highlight when skill_parallel finishes -->
                    <clone prototype="skill_lin">
                        <member id="tool_frame">tool</member>
                        <member id="target_frame">target2</member>
                    </clone>


                </member>

            </clone>
        </member>

    </clone>

</pitasc>
