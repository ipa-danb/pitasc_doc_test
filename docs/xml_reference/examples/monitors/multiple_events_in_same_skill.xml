<?xml version="1.0" encoding="UTF-8"?>

<!-- This example checks if a certain bug happens during event processing.

skill_guarded_approach contains 2 monitors that fire at the same time. In older versions,
this led to a transition to skill_lin ("back"), followed immediately by a transition
exiting the parent skill_sequence. This was due to a bug that checks monitors even after
their skill is already finished.
-->

<pitasc>

    <models>
        <include package="pitasc_library" file="models/pitasc.xml"/>
        <include package="pitasc_library" file="models/skills.xml"/>

        <include package="pitasc_library" file="universal_robots/ur.xml"/>
    </models>

    <clone prototype="project">

        <member id="configuration">
            <clone id="configuration" prototype="default_configuration"/>
        </member>

        <member id="environment">
            <clone prototype="robot_ur5">
                <member id="robot_driver.max_velocity">2.0</member>
                <member id="robot_driver.max_acceleration">3.0</member>
                <member id="components">
                    <clone prototype="force_sensor">
                        <member id="wrench_topic">wrench</member>
                    </clone>
                </member>
            </clone>
        </member>

        <member id="applications">
            <clone prototype="skill_sequence">

                <member id="robot" reference_id="environment.robot_ur5"/>

                <!-- Skills -->
                <member id="skills">

                    <!-- First move to start position -->
                    <clone prototype="skill_lin">
                        <member id="tool_frame">tool</member>
                        <member id="target_frame">start_position</member>
                    </clone>

                    <!-- Moves along z until it hits something-->
                    <clone prototype="skill_guarded_approach">
                        <member id="control_frame">start_position</member>
                        <member id="tool_frame">tool</member>
                        <member id="axes">z</member>
                        <member id="velocities">0.02</member>
                        <member id="max_forces">10.0</member>

                        <member id="monitors">
                            <clone id="force_threshold_copy" prototype="monitor_threshold">
                                <member id="provider" reference_id="force_skill.collections.force_chain.chains[0]"/>
                                <member id="coordinates" reference_id="axes"/>
                                <member id="prefix" reference_id="force_skill.collections.force_chain.prefix"/>
                                <member id="operator">absolute_greater</member>
                                <member id="thresholds" reference_id="max_forces"/>
                            </clone>
                        </member>
                    </clone>

                    <!-- Back to start position -->
                    <clone id="back" prototype="skill_lin">
                        <member id="tool_frame">tool</member>
                        <member id="target_frame">start_position</member>
                    </clone>

                    <!-- This skill will only be reached if the monitors of guarded_approach are handled correctly -->
                    <!-- In the old, bugged codebase, monitor `force_threshold_copy` of skill_guarded_approach
                         fires when skill_lin is reached, skipping skill "do_nothing", as the event is not associated
                         with skill_lin, but guarded_approach, and thus the parent skill_sequence -->
                    <clone id="do_nothing" prototype="skill_idle_duration">
                        <member id="duration">2</member>

                        <member id="scripts">
                            <clone prototype="script_measurement_publisher">
                                <member id="provider" reference_id="robot.robot_driver"/>
                                <member id="topic">robot_measurements</member>
                                <member id="coordinates">shoulder_pan_joint</member>
                            </clone>
                        </member>
                    </clone>

                </member>

            </clone>
        </member>

    </clone>

</pitasc>
