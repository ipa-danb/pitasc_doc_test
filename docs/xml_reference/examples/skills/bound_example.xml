<?xml version="1.0" encoding="UTF-8"?>

<!-- This example application shows the usage of boundaries with the optimizer solver.
    i.e.,
inequality constraints in cartesian and joint space
        , weighted combination of conflicting
skill objectives
-->

<pitasc>

    <models>
        <include package="pitasc_library" file="models/pitasc.xml" />
        <include package="pitasc_library" file="models/skills.xml" />

        <include package="pitasc_library" file="universal_robots/ur.xml" />
    </models>

    <clone prototype="project">

        <member id="environment">
            <clone prototype="robot_ur5">
                <member id="robot_driver.max_velocity">2.0</member>
                <member id="robot_driver.max_acceleration">3.0</member>
                <member id="components">
                    <clone prototype="force_sensor">
                        <member id="wrench_topic">wrench</member>
                    </clone>
                </member>
            </clone>
        </member>

        <member id="configuration">
            <clone id="configuration" prototype="default_configuration" />
        </member>

        <member id="applications">
            <clone prototype="skill_sequence">
                <member id="robot" reference_id="environment.robot_ur5" />
                <member id="skills">
                    <clone prototype="skill_lin">
                        <member id="tool_frame">tool</member>
                        <member id="target_frame">target1</member>
                    </clone>

                    <!-- unconstraint motion from target 1 to target 2-->
                    <clone prototype="skill_lin">
                        <member id="tool_frame">tool</member>
                        <member id="target_frame">target2</member>
                        <member id="max_linear_velocity">0.3</member>
                    </clone>

                    <!-- reset to target 1 -->
                    <clone prototype="skill_lin">
                        <member id="tool_frame">tool</member>
                        <member id="target_frame">target1</member>
                    </clone>

                    <!-- constraint for x axis during motion from target 1 to target 2 -->
                    <clone prototype="skill_concurrency">
                        <member id="skills">
                            <clone prototype="skill_lin">
                                <member id="tool_frame">tool</member>
                                <member id="target_frame">target2</member>
                                <member id="max_linear_velocity">0.3</member>
                                <!-- Tracking weight can be set directly
                                     Will
                                be ignored, if not set for every tasks individually! -->
                                <member id="tasks.tracking.weight">100</member>
                            </clone>
                            <clone prototype="skill_cartesian_bound">
                                <member id="tool_frame">tool</member>
                                <member id="target_frame">target1</member>
                                <member id="axes">x</member>
                                <member id="lower_bound">-0.05</member>
                                <member id="upper_bound">0.5</member>
                                <!-- value that determines on how close the target_frame
                                    has
                                to be for the robot velocity to be limited -->
                                <member id="scaler">1.0</member>
                            </clone>
                        </member>
                        <!-- due to the constraint, skill_lin will never finish, so we need an extra
                        monitor -->
                        <member id="monitors">
                            <clone prototype="monitor_duration">
                                <member id="duration">5.0</member>
                            </clone>
                        </member>
                    </clone>

                    <!-- constrain z axis for a lin trajectory, e.g. to prevent touching the ground -->
                    <clone prototype="skill_lin">
                        <member id="tool_frame">tool</member>
                        <member id="target_frame">target1</member>
                    </clone>
                    <clone prototype="skill_concurrency">
                        <member id="skills">
                            <clone prototype="skill_lin_trajectory">
                                <member id="tool_frame">tool</member>
                                <member id="max_linear_velocity">0.2</member>
                                <member id="max_linear_acceleration">1.5</member>
                                <member id="linear_ff_controller_gain">0.8</member>
                                <member id="waypoints">
                                    <clone prototype="lin_trajectory_waypoint">
                                        <member id="target_frame">target2</member>
                                        <member id="blending_distance">0.02</member>
                                    </clone>
                                    <clone prototype="lin_trajectory_waypoint">
                                        <member id="target_frame">start_position</member>
                                        <member id="blending_distance">0.1</member>
                                    </clone>
                                    <clone prototype="lin_trajectory_waypoint">
                                        <member id="target_frame">target3</member>
                                    </clone>
                                </member>
                            </clone>
                            <clone prototype="skill_cartesian_bound">
                                <member id="tool_frame">tool</member>
                                <member id="target_frame">base_link</member>
                                <member id="axes">z</member>
                                <member id="lower_bound">0.1</member>
                                <member id="upper_bound">1.0</member>
                            </clone>
                            <clone prototype="skill_joint_space_bound">
                                <member id="lower_bound">-6,-6,-6,-6,-6,-6</member>
                                <member id="upper_bound"> 6, 6, 6, 6, 6, 6</member>
                            </clone>
                        </member>
                    </clone>

                </member>

            </clone>
        </member>

    </clone>

</pitasc>